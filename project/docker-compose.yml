version: "3"
services:
  api: # API.
    container_name: auction_api
    build: 
      context: ./api
      dockerfile: Dockerfile
    depends_on: 
      - postgres
    volumes:
      - ./static:/static
      - ./user:/user
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      - auction_net
    env_file:
      - local.env
    
  postgres: # Database.
    image: postgres:11.2-alpine
    container_name: auction_db
    environment: 
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auction
      POSTGRES_USER: postgres
    restart: unless-stopped
    networks:
      - auction_net
    volumes:
      - pg-data:/var/lib/postgresql/data
  
  web: # Proxy to merge our services together.
    build: ./frontend
    container_name: auction_proxy
    depends_on: 
      - api
    volumes: 
      - ./static:/static
      - ./user:/user
      - ./config/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - auction_net

  redis: # Caching
    image: redis:latest
    container_name: auction_cache
    networks:
      - auction_net

networks:
  auction_net:
    driver: bridge

volumes:
  pg-data: